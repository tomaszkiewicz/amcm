{{- define "helmApplication" }}
{{- $name := index .app "name" }}
{{- if and (not $name) (index .app "addon") }}
{{- $name = .app.addon }}
{{- end }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ $name }}-{{ .cluster.name }}
  namespace: argocd
  {{- if and (index .app "cascadeDelete") }}
    {{- if .app.cascadeDelete }}
  finalizers:
  - resources-finalizer.argocd.argoproj.io
    {{- end }}
  {{- end }}
spec:
  project: {{ .cluster.name }}
  source:
    {{- $namespace := $name }}
    {{- $appSettings := .app }}
    {{- $addon := index .app "addon" }}
    {{- if $addon }}
      {{- $appSettings = data.YAML (file.Read (printf "addons/%s.yaml" $addon)) }}
    {{- end }}
    {{- $namespace = index $appSettings "namespace" }}
    {{- $repoURL := index $appSettings "repoURL" }}
    {{- if not $repoURL }}
    {{- $repoUrl = index .cluster "repoURL" }}
    {{- end }}
    {{/* TODO add fallback to global repoURL */}}
    repoURL: {{ $repoURL }}
    path: {{ $appSettings.path }}
    {{- $targetRevision := index $appSettings "targetRevision" }}
    {{- if $targetRevision }}
    targetRevision: {{ $targetRevision }}
    {{- end }}
    helm:
      {{- $releaseName := index $appSettings "releaseName" }}
      {{- if not $releaseName }}
      {{- $releaseName = $name }}
      {{- end }}
      releaseName: {{ $releaseName }}
      {{- $parameters := index .app "parameters" }}
      {{- if $parameters }}
      parameters:
      {{- range $key, $value := $parameters }}
      - name: {{ $key }}
        value: {{ $value }}
      {{- end }}
      {{- end }}
      {{- if (index $appSettings "values") }}
        {{- $values := $appSettings.values | data.ToYAML }}
        {{- $settings := index .app "settings" }}
        {{- if $settings }}
          {{- range $key, $value := $settings }}
            {{- $values = regexp.Replace (printf "%s%s" "%SETTINGS_" $key) $value $values }}
          {{- end }}
        {{- end }}
      values: | {{ "\n" }}
        {{- $values | indent 8 }}
      {{- end }}
      {{- $valueFiles := index $appSettings "valueFiles" }}
      {{- if $valueFiles }}
      valueFiles:
      {{ $valueFiles | data.ToYAML }}
      {{- end }}
  destination:
    server: {{ .cluster.server }}
    {{- if not $namespace }}
      {{- $namespace = $name }}
    {{- end }}
    namespace: {{ $namespace }}
---
{{- end }}