{{- $basePath := ds "basePath" }}
{{- $repoPath := ds "repoPath" }}

{{- $repoURL := ds "repoUrl" }}

{{ tmpl.Inline (file.Read (printf "%s/templates/helm-application.yaml" $basePath)) . }}
{{ tmpl.Inline (file.Read (printf "%s/templates/kustomize-application.yaml" $basePath)) . }}
{{ tmpl.Inline (file.Read (printf "%s/templates/argocd-project.yaml" $basePath)) . }}
{{ tmpl.Inline (file.Read (printf "%s/templates/objects-generator.yaml" $basePath)) . }}

{{- range (file.ReadDir "clusters") }}
  {{- $clusterConfigFile := printf "clusters/%s/cluster.yaml" . }}
  {{- if file.Exists $clusterConfigFile }}
    {{- $clusterPath := printf "%s/clusters/%s" $repoPath . }}
    {{- $paths := dict "base" $basePath "repo" $repoPath "cluster" $clusterPath }}
# Detected cluster in {{.}}{{ "\n" }}
    {{- $settings := data.YAML (file.Read $clusterConfigFile) }}
# Cluster name: {{ $settings.cluster.name }}{{ "\n" }}

# BEGIN argocd projects{{ "\n" }}
    {{ template "argocdProject" (dict "cluster" $settings.cluster) }}
# END argocd projects{{ "\n" }}

# BEGIN helm applications{{ "\n" }}
    {{- $helmApplications := index $settings "helmApplications" }}
    {{- if $helmApplications }}
      {{- range $helmApplications }}
        {{ template "helmApplication" (dict "cluster" $settings.cluster "app" . "paths" $paths "repoURL" $repoURL) }}
      {{- end }}
    {{- end }}
# END helm applications{{ "\n" }}

# BEGIN kustomize applications{{ "\n" }}
    {{- $kustomizeApplications := index $settings "kustomizeApplications" }}
    {{- if $kustomizeApplications }}
      {{- range $kustomizeApplications }}
        {{- template "kustomizeApplication" (dict "cluster" $settings.cluster "app" . "paths" $paths "repoURL" $repoURL) }}
      {{- end }}
    {{- end }}
# END kustomize applications{{ "\n" }}

# BEGIN objects generator{{ "\n" }}
    {{ template "objectsGenerator" (dict "cluster" $settings.cluster "helmApplications" $settings.helmApplications "paths" $paths "repoURL" $repoURL) }}
# END objects generator{{ "\n" }}
  {{- end }}
{{- end}}